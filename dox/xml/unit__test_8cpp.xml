<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="unit__test_8cpp" kind="file" language="C++">
    <compoundname>unit_test.cpp</compoundname>
    <includes refid="protos_8h" local="yes">protos.h</includes>
    <incdepgraph>
      <node id="6">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>unit_test.cpp</label>
        <link refid="unit__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="unit__test_8cpp_1a8e55f3e436b0268b26875038536f8e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unit_test</definition>
        <argsstring>()</argsstring>
        <name>unit_test</name>
        <briefdescription>
<para>Tests correctness of work of some functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Test of fgets</para>
<para>&lt; EOTest of fgets</para>
<para>&lt; Test of fputs</para>
<para>&lt; EOTest of fputs</para>
<para>&lt; Test of strcat</para>
<para>&lt; EOTest of strcat</para>
<para>&lt; Test of strncat</para>
<para>&lt; EOTest of strncat</para>
<para>&lt; Test of strchr</para>
<para>&lt; EOTest of strchr</para>
<para>&lt; Test of strdup</para>
<para>&lt; EOTest of strdup</para>
<para>&lt; Test of strlen</para>
<para>&lt; EOTest52</para>
<para>&lt; Test of strcpy</para>
<para>&lt; EOTest of strcpy</para>
<para>&lt; Test of strncpy</para>
<para>&lt; EOTest of strncpy</para>
<para>&lt; Test of smart_strcpy</para>
<para>&lt; EOTest of smart_strcpy</para>
        </inbodydescription>
        <location file="unit_test.cpp" line="6" column="6" bodyfile="unit_test.cpp" bodystart="6" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protos_8h" kindref="compound">protos.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unit__test_8cpp_1a8e55f3e436b0268b26875038536f8e53" kindref="member">unit_test</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>test_io<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;utest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc<sp/>(10);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>b<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc<sp/>(12);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;def&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs<sp/>(</highlight><highlight class="stringliteral">&quot;abs&quot;</highlight><highlight class="normal">,<sp/>test_io);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek<sp/>(test_io,<sp/>0,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="fgets_8cpp_1acfb6838062d4b9eccc8c7db12539fa5f" kindref="member">my_fgets</ref><sp/>(&amp;a,<sp/>test_io)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(</highlight><highlight class="stringliteral">&quot;abs&quot;</highlight><highlight class="normal">,<sp/>a)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="20"></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="fputs_8cpp_1a3f6b7b5f831029c14df24abeac1d57e8" kindref="member">my_fputs</ref><sp/>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/>test_io)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek<sp/>(test_io,<sp/>3,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>fgets<sp/>(a,<sp/>4,<sp/>test_io);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/>a)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose<sp/>(test_io);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>test_io<sp/>=<sp/>fopen<sp/>(</highlight><highlight class="stringliteral">&quot;utest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose<sp/>(test_io);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;def&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1af3005e3df6fbf19089cfbad2aea69884" kindref="member">my_strcat</ref><sp/>(b,<sp/>&amp;a)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abcdef&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="38"></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;def&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1a706a9327e6ff3bfc775086bf1509fe8c" kindref="member">my_strncat</ref><sp/>(b,<sp/>&amp;a,<sp/>2)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abcde&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="45"></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abcdebdef&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="protos_8h_1a2cc4cf5219af874ad19160df6458ea48" kindref="member">my_strchr</ref><sp/>(a,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(b<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;bcdebdef&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="52"></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(a<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="protos_8h_1af36482ca227a1916a8a2f93ae01fe510" kindref="member">my_strdup</ref><sp/>(a);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(b<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="60"></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1aba855dca0dac39e28eb5264dc3ec2049" kindref="member">my_strlen</ref><sp/>(a)<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="65"></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1a72531846ab7d930fd1a509b0ad5851ad" kindref="member">my_strcpy</ref><sp/>(a,<sp/>b)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(a,<sp/>b)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="71"></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1a745e53545447dc16984bbb926b3356db" kindref="member">my_strncpy</ref><sp/>(a,<sp/>b,<sp/>2)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a051d0e90144d67549b6bd28b8bc76a11" kindref="member">OVERFL</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(b,<sp/></highlight><highlight class="stringliteral">&quot;ab&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="78"></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(<ref refid="protos_8h_1a4dc6f77e5a6731a3c4cca80a0ea6d9b0" kindref="member">my_smart_strcpy</ref><sp/>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/>&amp;a)<sp/>==<sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a011ae48ddd36934a88e163cf739e1d7e" kindref="member">ASRT</ref><sp/>(strcmp<sp/>(a,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="unit_test.cpp"/>
  </compounddef>
</doxygen>
