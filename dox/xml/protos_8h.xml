<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="protos_8h" kind="file" language="C++">
    <compoundname>protos.h</compoundname>
    <includes local="no">TXlib.h</includes>
    <includedby refid="funcs_8cpp" local="yes">funcs.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="strcpy_8cpp" local="yes">strcpy.cpp</includedby>
    <includedby refid="unit__test_8cpp" local="yes">unit_test.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TXlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>funcs.cpp</label>
        <link refid="funcs_8cpp"/>
      </node>
      <node id="5">
        <label>unit_test.cpp</label>
        <link refid="unit__test_8cpp"/>
      </node>
      <node id="4">
        <label>strcpy.cpp</label>
        <link refid="strcpy_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" prot="public" static="no" strong="no">
        <type></type>
        <name>action_status</name>
        <enumvalue id="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" prot="public">
          <name>OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a67b5846d76d883bcefacc95351f7803e" prot="public">
          <name>MEM_ERR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="4" column="1" bodyfile="protos.h" bodystart="4" bodyend="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="protos_8h_1a52358b4b8986c13631a49fc88781d785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref></type>
        <definition>action_status my_getline</definition>
        <argsstring>(char **string_to_input_to)</argsstring>
        <name>my_getline</name>
        <param>
          <type>char **</type>
          <declname>string_to_input_to</declname>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>\brief Reads line from stdin
\param str - pointer to string&apos;s first element
\return OK - string read, all ok
\return MEM_LIM - program ran out of free memory
</verbatim> Also dynamically changes string&apos;s size to match the input <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="9" column="15" bodyfile="funcs.cpp" bodystart="34" bodyend="66" declfile="protos.h" declline="9" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="protos_8h_1a0ae04bf060cf734b5085462f3100a4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int string_size</definition>
        <argsstring>(const char *string_to_measure)</argsstring>
        <name>string_size</name>
        <param>
          <type>const char *</type>
          <declname>string_to_measure</declname>
          <defname>str</defname>
        </param>
        <briefdescription>
<para>Calculates string&apos;s size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to string&apos;s first element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Full string size including &apos;\0&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="11" column="14" bodyfile="funcs.cpp" bodystart="15" bodyend="24" declfile="protos.h" declline="11" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="protos_8h_1a5c894b4b060ffad704a413ad2af95c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref></type>
        <definition>action_status my_strncpy</definition>
        <argsstring>(char **from, char **to, unsigned int n)</argsstring>
        <name>my_strncpy</name>
        <param>
          <type>char **</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>to</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="13" column="15" declfile="protos.h" declline="13" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="protos_8h_1ac5978683c9855b9b6c4702feedc9dd1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref></type>
        <definition>action_status my_strcpy</definition>
        <argsstring>(char *from, char *to)</argsstring>
        <name>my_strcpy</name>
        <param>
          <type>char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>A simply strcpy function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char*</parametername>
</parameternamelist>
<parameterdescription>
<para>from - string to copy from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char*</parametername>
</parameternamelist>
<parameterdescription>
<para>to - string to copy to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OK in all cases except when MEM_LIM </para>
</simplesect>
<simplesect kind="return"><para>MEM_ERR if one of the pointers is NULL</para>
</simplesect>
A simple function that copies c-string from to c-string to without minding the sizes of both Actually may cause segmentation fault if used wrong </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="15" column="15" bodyfile="strcpy.cpp" bodystart="16" bodyend="29" declfile="protos.h" declline="15" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="protos_8h_1a8b76fadf2f75632d4bc3a8d29a80a7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref></type>
        <definition>action_status my_smart_strcpy</definition>
        <argsstring>(char **from, char **to)</argsstring>
        <name>my_smart_strcpy</name>
        <param>
          <type>char **</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="17" column="15" declfile="protos.h" declline="17" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="protos_8h_1a8e55f3e436b0268b26875038536f8e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unit_test</definition>
        <argsstring>()</argsstring>
        <name>unit_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="protos.h" line="19" column="6" bodyfile="unit_test.cpp" bodystart="4" bodyend="16" declfile="protos.h" declline="19" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(C)<sp/>Poltorashka,<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TXlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref><sp/>{</highlight></codeline>
<codeline lineno="5" refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a67b5846d76d883bcefacc95351f7803e" kindref="member">MEM_ERR</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="7" refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a67b5846d76d883bcefacc95351f7803e" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref><sp/><ref refid="protos_8h_1a52358b4b8986c13631a49fc88781d785" kindref="member">my_getline</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>string_to_input_to);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="protos_8h_1a0ae04bf060cf734b5085462f3100a4f5" kindref="member">string_size</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>string_to_measure);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="protos_8h_1a5c894b4b060ffad704a413ad2af95c21" refkind="member"><highlight class="normal"><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref><sp/><ref refid="protos_8h_1a5c894b4b060ffad704a413ad2af95c21" kindref="member">my_strncpy</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>to,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref><sp/><ref refid="protos_8h_1ac5978683c9855b9b6c4702feedc9dd1c" kindref="member">my_strcpy</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="protos_8h_1a8b76fadf2f75632d4bc3a8d29a80a7e0" refkind="member"><highlight class="normal"><ref refid="protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00" kindref="member">action_status</ref><sp/><ref refid="protos_8h_1a8b76fadf2f75632d4bc3a8d29a80a7e0" kindref="member">my_smart_strcpy</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>from,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>to);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8h_1a8e55f3e436b0268b26875038536f8e53" kindref="member">unit_test</ref><sp/>();</highlight></codeline>
    </programlisting>
    <location file="protos.h"/>
  </compounddef>
</doxygen>
