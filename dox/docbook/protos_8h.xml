<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_protos_8h" xml:lang="en-US">
<title>protos.h File Reference</title>
<indexterm><primary>protos.h</primary></indexterm>
<programlisting>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
</programlisting><simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00">action_status</link> { <link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59">OK</link> = 0
, <link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a67b5846d76d883bcefacc95351f7803e">MEM_ERR</link> = -1
, <link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a051d0e90144d67549b6bd28b8bc76a11">OVERFL</link> = 1
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00">action_status</link> <link linkend="_protos_8h_1a3f6b7b5f831029c14df24abeac1d57e8">my_fputs</link> (const char *out_str, FILE *stream)</para>
</listitem>
            <listitem><para>int <link linkend="_protos_8h_1af2f145304414f93f65d2035c25e76e86">my_strlen</link> (const char *str)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00"/>    <section>
    <title>action_status</title>
<indexterm><primary>action_status</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>action_status</secondary></indexterm>
<para><computeroutput>enum <link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00">action_status</link></computeroutput></para>
<para>Displays status of action that involves changing memory or reading it </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>OK</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>OK</secondary></indexterm>
<anchor xml:id="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a2bc49ec37d6a5715dd23e85f1ff5bb59"/>OK</entry><entry>
<para>Everything ok. </para>
</entry></row><row><entry><indexterm><primary>MEM_ERR</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>MEM_ERR</secondary></indexterm>
<anchor xml:id="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a67b5846d76d883bcefacc95351f7803e"/>MEM_ERR</entry><entry>
<para>Memory error, i.e. something wrong with pointers. </para>
</entry></row><row><entry><indexterm><primary>OVERFL</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>OVERFL</secondary></indexterm>
<anchor xml:id="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00a051d0e90144d67549b6bd28b8bc76a11"/>OVERFL</entry><entry>
<para>Overflow error, i.e. not enough memory. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 8 of file protos.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_protos_8h_1a3f6b7b5f831029c14df24abeac1d57e8"/>    <section>
    <title>my_fputs()</title>
<indexterm><primary>my_fputs</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>my_fputs</secondary></indexterm>
<para><computeroutput><link linkend="_protos_8h_1af617fb44a7c1958910a3e7a07b8b1d00">action_status</link> my_fputs (const char * out_str, FILE * stream)</computeroutput></para>
<para><literallayout><computeroutput>\brief Simple file output function
\param out_str - const string to output
\param stream  - output stream
\return OK - if everything went cool
\return MEM_ERR - if one of parametres is NULL
\return OVERFL - if it&apos;s impossible to put char into file
</computeroutput></literallayout> Prints a string into a file and doesn&apos;t mind sizes of both, also can&apos;t abort program </para>
<para>
Definition at line 14 of file fputs.cpp.</para>
    </section><anchor xml:id="_protos_8h_1af2f145304414f93f65d2035c25e76e86"/>    <section>
    <title>my_strlen()</title>
<indexterm><primary>my_strlen</primary><secondary>protos.h</secondary></indexterm>
<indexterm><primary>protos.h</primary><secondary>my_strlen</secondary></indexterm>
<para><computeroutput>int my_strlen (const char * str)</computeroutput></para>
<para><literallayout><computeroutput>\brief Returns string length
\param str - string to calculate len of
\return -1 - if str is NULL
\return anything &gt;=0 - string&apos;s len
</computeroutput></literallayout> Calculates string length. Nothing more to say </para>
<para>
Definition at line 10 of file strlen.cpp.</para>
</section>
</section>
</section>
